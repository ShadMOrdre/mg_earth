

local points = {
	{1,12332.5,-15564.333333333,1},
	{2,13380.5,-14682.125,1},
	{3,12842,-10856,1},
	{4,10540,-15610,1},
	{5,10793.75,-16157.75,1},
	{6,8597.25,-9750.6666666667,1},
	{7,3168,-13373.666666667,1},
	{8,-465.2,-12534.3,1},
	{9,-3126.1,-7186.6,1},
	{10,-4633.75,-11001.875,1},
	{11,-4090.75,-7458,1},
	{12,3833.375,1952.125,1},
	{13,10340.25,4916.3333333333,1},
	{14,11535.6,-319.9,1},
	{15,9101.0833333333,8455.4166666667,1},
	{16,12024.1,7188.8,1},
	{17,6532.4166666667,5172.0833333333,1},
	{18,5412.1,8063.8,1},
	{19,1638.4,11662.9,1},
	{20,4874.6666666667,12237.666666667,1},
	{21,10339.7,11325.3,1},
	{22,9023.375,13863.625,1},
	{23,11365.916666667,8922.75,1},
	{24,12276.1,11210.4,1},
	{25,10614.5,11898,1},
	{26,2851.6,-1888.3,1},
	{27,2256.7,2721.1,1},
	{28,2936.7,4670.4,1},
	{29,-495.8,5250.9,1},
	{30,-4957.75,3961.75,1},
	{31,-4515,10341.833333333,1},
	{32,9784.0833333333,13821.75,2},
	{33,4199,-7021.25,2},
	{34,-18823.625,1063.125,2},
	{35,-6140.5833333333,-111.75,2},
	{36,17764.166666667,798.33333333333,2},
	{37,-7871.8333333333,-16540,2},
	{38,-1021.5,17248,2},
	{39,-13799.357142857,629.42857142857,2},
	{40,-18611.875,8173.625,2},
	{41,-5325.75,-14493.25,2},
	{42,-16535.2,-14877.1,2},
	{43,-16784.333333333,2951.6666666667,2},
	{44,-19026.3,19005.3,2},
	{45,-16141.166666667,3338.1666666667,2},
	{46,7551.875,-13047,2},
	{47,11944.916666667,-14647.5,2},
	{48,-7725.125,18282,2},
	{49,-15861,-18051,2},
	{50,-5883.8,5366.2,2},
	{51,16138.25,10251.416666667,2},
	{52,1747.5,-14694.857142857,2},
	{53,-12719.625,-3124,2},
	{54,14011.4,18569.1,2},
	{55,3336.5,9366.75,2},
	{56,-19304.1,20099.7,2},
	{57,8821.0833333333,-4512.4166666667,2},
	{58,-5615.4,-11351.9,2},
	{59,14233,10904.75,2},
	{60,-10775.333333333,-18674.916666667,2},
	{61,3200.375,-4215.125,2},
	{62,-10420.9,-10417.7,2},
	{63,3587.6666666667,7604.1666666667,2},
	{64,647.6,1455.8,2},
	{65,-14789.75,-10523.75,2},
	{66,-11500.5,20118.1,2},
	{67,-10508.5,2593.5,2},
	{68,-7593.6666666667,-6854.75,2},
	{69,-1034.5833333333,-15230.083333333,2},
	{70,4056.875,-1058.875,2},
	{71,16992.2,10744.5,2},
	{72,10945.4,847.2,2},
	{73,9367.375,-11828.75,2},
	{74,7496.3,19645.3,2},
	{75,5119.875,-1656.125,2},
	{76,7561.5,14423.25,2},
	{77,-17028.5,14339.583333333,2},
	{78,-7701.9,-544,2},
	{79,8885.125,5311.5,2},
	{80,-127.4,6241.6,2},
	{81,15447.2,3053.4,2},
	{82,15736,-3357.5833333333,2},
	{83,-3177.2,16450.5,2},
	{84,-18423.333333333,20263.083333333,2},
	{85,-13042.25,-5546.8333333333,2},
	{86,779.9,-10112.7,2},
	{87,11004.5,7526.5,2},
	{88,12704.9,-11816,2},
	{89,-2690.375,-18002.75,2},
	{90,-17110.375,17657.25,2},
	{91,-18670.625,-6179.125,2},
	{92,16994.125,-10558.75,2},
	{93,-3279,5381.1666666667,2},
	{94,-15474.3,14729.2,2},
	{95,-19859.5,14256.7,2},
	{96,-14960.125,-12365.875,2},
	{97,-9054.9166666667,11133,2},
	{98,18670.625,19247.5,2},
	{99,12853.1,-249.2,2},
	{100,-4414.1,-16419.6,2},
	{101,18495,18163.3,2},
	{102,-6000.5,-10034.625,2},
	{103,-15828.5,-6260.25,2},
	{104,19018.375,10511.5,2},
	{105,8558.5,291.625,2},
	{106,12168.125,-13599.125,2},
	{107,17639.333333333,-509.66666666667,2},
	{108,6263,6357.625,2},
	{109,-4060,-2977,2},
	{110,8347,-13943.1,2},
	{111,-18391.2,-14633.7,2},
	{112,-6775.1666666667,-12729.416666667,2},
	{113,-12362.666666667,5147.75,2},
	{114,-7032.1666666667,58,2},
	{115,-15198.166666667,-18342.75,2},
	{116,11557.357142857,17707.857142857,2},
	{117,18197.625,6175.875,2},
	{118,-1509.0833333333,13953.833333333,2},
	{119,10338.083333333,-722.08333333333,2},
	{120,-7334.625,19661.75,2},
	{121,15729.75,2667.75,2},
	{122,-6174.375,18779.875,2},
	{123,-20806.9,-16440.5,2},
	{124,-7640.25,-18389.625,2},
	{125,-1964.4,8337.5,2},
	{126,-16274.3,12546.9,2},
	{127,14081.5,-12234.1,2},
	{128,-20369.5,13238,2},
	{129,5521,18033.166666667,2},
	{130,-6494.4,7875.4,2},
	{131,-20801.583333333,-19709.416666667,2},
	{132,3939.5,-19288.875,2},
	{133,-11212.75,11663.375,2},
	{134,9628.6,-13499.3,2},
	{135,-2000.6,14470.9,2},
	{136,316.5,15139.3,2},
	{137,3526.0833333333,15715.25,2},
	{138,-12225.75,-11801.5,2},
	{139,-9573.7,-13718.7,2},
	{140,-20212.3,-13263.9,2},
	{141,17622.166666667,16968,2},
	{142,-10668.166666667,-9825.3333333333,2},
	{143,-4454.5833333333,-14709.166666667,2},
	{144,15540.25,8757.6666666667,2},
	{145,-13261.25,18464.583333333,2},
	{146,12619.7,5901.9,2},
	{147,4109.6666666667,9492.3333333333,2},
	{148,11617.4,-11565,2},
	{149,-3005.4166666667,13739.666666667,2},
	{150,-14782.6,19569.9,2},
	{151,10315.3,7631.5,2},
	{152,15986.8,17682.7,2},
	{153,16280.5,563.78571428571,2},
	{154,11211.916666667,-3447.5833333333,2},
	{155,11693.2,-59.8,2},
	{156,12749.125,-16289.5,2},
	{157,-1192.4166666667,-12823.166666667,2},
	{158,2611.6,587.5,2},
	{159,11081.2,-17664.8,2},
	{160,18235.375,-12772,2},
	{161,-11811.3,14625.3,2},
	{162,-6957.75,18855.375,2},
	{163,5660.5,15443,2},
	{164,13284.6,7706.8,2},
	{165,13221.4,-4571.5,2},
	{166,-16410.25,800.5,2},
	{167,18849,8037,2},
	{168,18144.9,20175.9,2},
	{169,-8975.3333333333,6015.5833333333,2},
	{170,13621.25,-8829.8333333333,2},
	{171,-12926.5,-10417.3,2},
	{172,-17785.833333333,14005.333333333,2},
	{173,12819.833333333,-14965.833333333,2},
	{174,-1561.6,3246.8,2},
	{175,-3248.5,2578,2},
	{176,1785.875,-4408,2},
	{177,-19023.4,5562.9,2},
	{178,13556.333333333,-1961.5833333333,2},
	{179,-8540.6,-15423.7,2},
	{180,3802.75,-2855.125,2},
	{181,14168.857142857,2426,2},
	{182,-19766.75,-17820.25,2},
	{183,18864.75,-2117.875,2},
	{184,-6396.8,-14583.6,2},
	{185,17201.7,-11218.6,2},
	{186,-19446.25,17092.375,2},
	{187,-17585,9592.3,2},
	{188,19081.9,15932.3,2},
	{189,-5040.6,760.2,2},
	{190,-7626.875,-8038.25,2},
	{191,2256.875,-7818.875,2},
	{192,-5452.5,1293,2},
	{193,4202.1666666667,-19391.75,2},
	{194,-16464.5,-4163.8333333333,2},
	{195,-3748.1666666667,9992.3333333333,2},
	{196,7272.2,-7926.7,2},
	{197,109.625,10507.5,2},
	{198,-4700,1695.4,2},
	{199,-17495.7,15271.6,2},
	{200,-11716.714285714,-8892.9285714286,2},
	{201,8113.875,-18442,2},
	{202,470.71428571429,-7375.0714285714,2},
	{203,-11567.4,-15249.7,2},
	{204,10384,6512.8333333333,2},
	{205,-8045.5,15727.875,2},
	{206,-14062.5,-11374.25,2},
	{207,-13246.3,-1650.8,2},
	{208,8812.875,1420.75,2},
	{209,9099.8333333333,-13101.5,2},
	{210,-1342.8,-4686.8,2},
	{211,766.8,4111.3,2},
	{212,653,-3222.5,2},
	{213,-9983.625,-3978.375,2},
	{214,-18023.666666667,-13723.833333333,2},
	{215,13972.3,9238.7,2},
	{216,-18791.25,-2239.625,2},
	{217,18695.25,17678.125,2},
	{218,20408.928571429,-8738.3571428571,2},
	{219,5357.1,-16647.4,2},
	{220,-6748.6666666667,-2585.75,2},
	{221,-7485.25,3644,2},
	{222,15967.9,-6965.5,2},
	{223,-13214.083333333,-8981.5,2},
	{224,-11649.9,-9690.5,2},
	{225,17259.333333333,7106.1666666667,2},
	{226,-3218.7,15120.4,2},
	{227,-3576.375,-7592.625,2},
	{228,9793.875,8477.25,2},
	{229,17573,3471.75,2},
	{230,19190.375,-11489.5,2},
	{231,-12084.714285714,8049.8571428571,2},
	{232,-5440.3,-14438.8,2},
	{233,10036.125,-6860.625,2},
	{234,880.5,17093.833333333,2},
	{235,-58,-19340.416666667,2},
	{236,-19272.75,-17811.75,2},
	{237,-17263.3,18423.8,2},
	{238,7581.375,19670.5,2},
	{239,-1070,10632.333333333,2},
	{240,-3640.25,10198.416666667,2},
	{241,-8652.625,19662.25,2},
	{242,-10240.166666667,1108.25,2},
	{243,10953.125,18369.875,2},
	{244,12797.25,-6397.375,2},
	{245,7486.375,3152.125,2},
	{246,20182.8,-4350.7,2},
	{247,-5666.3333333333,13851,2},
	{248,-5193.1,-12631.8,2},
	{249,5772,13314.8,2},
	{250,-9288.75,-597.5,2},
	{251,1418.3333333333,-17006.166666667,2},
	{252,-5739.5833333333,-14145.083333333,2},
	{253,14264.5,17169.333333333,2},
	{254,18656.375,4363.875,2},
	{255,-5255.1,-6782.1,2},
	{256,-17391.666666667,-8602,2},
	{257,17335.083333333,9730.4166666667,2},
	{258,-6206.375,-14257.25,2},
	{259,7512.3571428571,-16526.571428571,2},
	{260,6811.9,-17999.1,2},
	{261,5492.9,20584.2,2},
	{262,-8723.7,7658.7,2},
	{263,-4466.25,-263.875,2},
	{264,-6309.8,10196.7,2},
	{265,-5127.125,2150.125,2},
	{266,17179.75,4799.125,2},
	{267,3715,11236,2},
	{268,11339.875,6935.25,2},
	{269,16413.7,19819.5,2},
	{270,4817.75,-5350,2},
	{271,3041.125,18933.625,2},
	{272,-18969.875,18796.75,2},
	{273,3934.6428571429,5292.7142857143,2},
	{274,-16740.333333333,11296,2},
	{275,14499,-7610.5,2},
	{276,-3909.3333333333,-8425.8333333333,2},
	{277,-9421.1,18484.3,2},
	{278,4365,7782.5,2},
	{279,17349.166666667,17642.833333333,2},
	{280,-14848.3,-9039,2},
	{281,-14824.333333333,13810.5,2},
	{282,18791.9,9644.8,2},
	{283,14851.166666667,-13832,2},
	{284,9291,6505.9,2},
	{285,-16530.833333333,17193,2},
	{286,-854.375,18109.875,2},
	{287,-8946.5,11514.125,2},
	{288,322.41666666667,-16949.75,2},
	{289,17334.166666667,-4561.1666666667,2},
	{290,-9001.625,-8776.125,2},
	{291,-6853,-8788.2,2},
	{292,1881.8333333333,17187.333333333,2},
	{293,-17282,-16535,2},
	{294,-11580.2,-1675.4,2},
	{295,-4853.625,-17665.75,2},
	{296,-16467.083333333,6806.5833333333,2},
	{297,1756.5,7151.4,2},
	{298,-2276.7142857143,-17984.571428571,2},
	{299,-3746.6666666667,4348.8333333333,2},
	{300,11030.625,-5074.25,2},
	{301,2572.25,17894.916666667,2},
	{302,-17495.166666667,13109.5,2},
	{303,-2379.6,11841.9,2},
	{304,9389.8333333333,-1575.8333333333,2},
	{305,-4443.5,16498,2},
	{306,-6863.4,15027.4,2},
	{307,13079.75,-8226,2},
	{308,-14373.375,9494.375,2},
	{309,6498,-20151,2},
	{310,13792.25,13139.583333333,2},
	{311,-8946.2,-5323.1,2},
	{312,-3821.5,18204.8,2},
	{313,17786.6,-2397.1,2},
	{314,19256.5,2599.625,2},
	{315,-14939.3,-1260.6,2},
	{316,10954.833333333,4832.0833333333,2},
	{317,7087.75,-1828.125,2},
	{318,-2470.2,-14337.4,2},
	{319,16940.416666667,15008.583333333,2},
	{320,-2127.2,-7859.6,2},
	{321,19142.75,17151.5,2},
}


local abs   = math.abs
local max   = math.max

local mg_world_scale			= mg_earth.settings.mg_world_scale

local dist_metric				= mg_earth.dist_metrics[mg_earth.settings.voronoi_distance]


local function get_dist(a,b,d_type)
	local dist
	if d_type then
		if d_type == "c" then
			dist = (max(abs(a), abs(b)))
		elseif d_type == "e" then
			dist = ((abs(a) * abs(a)) + (abs(b) * abs(b)))^0.5
		elseif d_type == "m" then
			dist = (abs(a) + abs(b))
		elseif d_type == "cm" then
			dist = (max(abs(a), abs(b)) + (abs(a) + abs(b))) * 0.5
		end
	end
	return dist
end

local function get_midpoint2(a,b, dist_metric)						--get_midpoint(a,b)

	local m_x = ((a.x+b.x) * 0.5)
	local m_z = ((a.z+b.z) * 0.5)					--returns the midpoint between two points
	local m_dist = get_dist((a.x - m_x), (a.z - m_z), dist_metric)
	local n_dist = get_dist((a.x - b.x), (a.z - b.z), dist_metric)
		-- local m_dz = (a.z - coord_z)
		-- local m_d = get_dist(m_dx, m_dz, dist_metric)
		-- local m_d = get_dist(m_dx, m_dz, dist_metric)

	-- return {x = ((a.x+b.x) * 0.5), z = ((a.z+b.z) * 0.5)}				--returns the midpoint between two points
	return m_x, m_z, m_dist, n_dist, n_x, n_z
end


mg_earth.tectonic_plates = {
	c_northamerica = {
		x = ((points[1][3] + points[2][3] + points[3][3] + points[4][3] + points[5][3] + points[6][3] + points[7][3]) / 7) * mg_world_scale,
		z = ((points[1][2] + points[2][2] + points[3][2] + points[4][2] + points[5][2] + points[6][2] + points[7][2]) / 7) * mg_world_scale,
		--y = mg_base_altitude + (mg_base_altitude / 7),
		name = "North America",
		drift_dir = {x=-1,z=1},
		neighbors = {},
	},
	c_southamerica = {
		x = ((points[8][3] + points[9][3] + points[10][3] + points[11][3]) / 4),
		z = ((points[8][2] + points[9][2] + points[10][2] + points[11][2]) / 4),
		--y = mg_base_altitude + (mg_base_altitude / 4),
		name = "South America",
		drift_dir = {x=-1,z=-1},
		neighbors = {},
	},
	c_europe = {
		x = ((points[12][3] + points[13][3] + points[14][3] + points[15][3] + points[16][3]) / 5) * mg_world_scale,
		z = ((points[12][2] + points[13][2] + points[14][2] + points[15][2] + points[16][2]) / 5) * mg_world_scale,
		--y = mg_base_altitude + (mg_base_altitude / 5),
		name = "Europe",
		drift_dir = {x=1,z=1},
		neighbors = {},
	},
	c_asia = {
		x = ((points[17][3] + points[18][3] + points[19][3] + points[20][3] + points[21][3] + points[22][3] + points[23][3] + points[24][3] + points[25][3]) / 9) * mg_world_scale,
		z = ((points[17][2] + points[18][2] + points[19][2] + points[20][2] + points[21][2] + points[22][2] + points[23][2] + points[24][2] + points[25][2]) / 9) * mg_world_scale,
		--y = mg_base_altitude + (mg_base_altitude / 10),
		name = "Asia",
		drift_dir = {x=-1,z=-1},
		neighbors = {},
	},
	c_africa = {
		x = ((points[26][3] + points[27][3] + points[28][3] + points[29][3] + points[30][3]) / 5) * mg_world_scale,
		z = ((points[26][2] + points[27][2] + points[28][2] + points[29][2] + points[30][2]) / 5) * mg_world_scale,
		--y = mg_base_altitude + (mg_base_altitude / 5),
		name = "Africa",
		drift_dir = {x=1,z=1},
		neighbors = {},
	},
	c_australia = {
		x = (points[31][3]) * mg_world_scale,
		z = (points[31][2]) * mg_world_scale,
		--y = mg_base_altitude,
		name = "Australia",
		drift_dir = {x=-1,z=1},
		neighbors = {},
	},
}


local t_na_e_mx, t_na_e_mz, t_na_e_md, t_na_e_nd, t_na_e_nx, t_na_e_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_northamerica"].x, z = mg_earth.tectonic_plates["c_northamerica"].z}, {x = mg_earth.tectonic_plates["c_europe"].x, z = mg_earth.tectonic_plates["c_europe"].z}, dist_metric)
local t_na_sa_mx, t_na_sa_mz, t_na_sa_md, t_na_sa_nd, t_na_sa_nx, t_na_sa_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_northamerica"].x, z = mg_earth.tectonic_plates["c_northamerica"].z}, {x = mg_earth.tectonic_plates["c_southamerica"].x, z = mg_earth.tectonic_plates["c_southamerica"].z}, dist_metric)
local t_na_af_mx, t_na_af_mz, t_na_af_md, t_na_af_nd, t_na_af_nx, t_na_af_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_northamerica"].x, z = mg_earth.tectonic_plates["c_northamerica"].z}, {x = mg_earth.tectonic_plates["c_africa"].x, z = mg_earth.tectonic_plates["c_africa"].z}, dist_metric)
local t_sa_af_mx, t_sa_af_mz, t_sa_af_md, t_sa_af_nd, t_sa_af_nx, t_sa_af_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_southamerica"].x, z = mg_earth.tectonic_plates["c_southamerica"].z}, {x = mg_earth.tectonic_plates["c_africa"].x, z = mg_earth.tectonic_plates["c_africa"].z}, dist_metric)
local t_e_af_mx, t_e_af_mz, t_e_af_md, t_e_af_nd, t_e_af_nx, t_e_af_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_europe"].x, z = mg_earth.tectonic_plates["c_europe"].z}, {x = mg_earth.tectonic_plates["c_africa"].x, z = mg_earth.tectonic_plates["c_africa"].z}, dist_metric)
local t_e_as_mx, t_e_as_mz, t_e_as_md, t_e_as_nd, t_e_as_nx, t_e_as_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_europe"].x, z = mg_earth.tectonic_plates["c_europe"].z}, {x = mg_earth.tectonic_plates["c_asia"].x, z = mg_earth.tectonic_plates["c_asia"].z}, dist_metric)
local t_as_af_mx, t_as_af_mz, t_as_af_md, t_as_af_nd, t_as_af_nx, t_as_af_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_asia"].x, z = mg_earth.tectonic_plates["c_asia"].z}, {x = mg_earth.tectonic_plates["c_africa"].x, z = mg_earth.tectonic_plates["c_africa"].z}, dist_metric)
local t_as_au_mx, t_as_au_mz, t_as_au_md, t_as_au_nd, t_as_au_nx, t_as_au_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_asia"].x, z = mg_earth.tectonic_plates["c_asia"].z}, {x = mg_earth.tectonic_plates["c_australia"].x, z = mg_earth.tectonic_plates["c_australia"].z}, dist_metric)
local t_af_au_mx, t_af_au_mz, t_af_au_md, t_af_au_nd, t_af_au_nx, t_af_au_nz = get_midpoint2({x = mg_earth.tectonic_plates["c_africa"].x, z = mg_earth.tectonic_plates["c_africa"].z}, {x = mg_earth.tectonic_plates["c_australia"].x, z = mg_earth.tectonic_plates["c_australia"].z}, dist_metric)


mg_earth.tectonic_plates["c_northamerica"].neighbors = {
	c_europe			= {m_x = t_na_e_mx,		m_z = t_na_e_mz,	m_d = t_na_e_md,	n_d = t_na_e_nd,	n_x = t_na_e_nx,		n_z = t_na_e_nz},
	c_southamerica		= {m_x = t_na_sa_mx,	m_z = t_na_sa_mz,	m_d = t_na_sa_md,	n_d = t_na_sa_nd,	n_x = t_na_sa_nx,		n_z = t_na_sa_nz},
	c_africa			= {m_x = t_na_af_mx,	m_z = t_na_af_mz,	m_d = t_na_af_md,	n_d = t_na_af_nd,	n_x = t_na_af_nx,		n_z = t_na_af_nz},
}
mg_earth.tectonic_plates["c_southamerica"].neighbors = {
	c_northamerica		= {m_x = t_na_sa_mx,	m_z = t_na_sa_mz,	m_d = t_na_sa_md,	n_d = t_na_sa_nd,	n_x = t_na_sa_nx,		n_z = t_na_sa_nz},
	c_africa			= {m_x = t_sa_af_mx,	m_z = t_sa_af_mz,	m_d = t_sa_af_md,	n_d = t_sa_af_nd,	n_x = t_sa_af_nx,		n_z = t_sa_af_nz},
}
mg_earth.tectonic_plates["c_europe"].neighbors = {
	c_northamerica		= {m_x = t_na_e_mx,		m_z = t_na_e_mz,	m_d = t_na_e_md,	n_d = t_na_e_nd,	n_x = t_na_e_nx,		n_z = t_na_e_nz},
	c_asia				= {m_x = t_e_as_mx,		m_z = t_e_as_mz,	m_d = t_e_as_md,	n_d = t_e_as_nd,	n_x = t_e_as_nx,		n_z = t_e_as_nz},
	c_africa			= {m_x = t_e_af_mx,		m_z = t_e_af_mz,	m_d = t_e_af_md,	n_d = t_e_af_nd,	n_x = t_e_af_nx,		n_z = t_e_af_nz},
}
mg_earth.tectonic_plates["c_asia"].neighbors = {
	c_europe			= {m_x = t_e_as_mx,		m_z = t_e_as_mz,	m_d = t_e_as_md,	n_d = t_e_as_nd,	n_x = t_e_as_nx,		n_z = t_e_as_nz},
	c_australia			= {m_x = t_as_au_mx,	m_z = t_as_au_mz,	m_d = t_as_au_md,	n_d = t_as_au_nd,	n_x = t_as_au_nx,		n_z = t_as_au_nz},
	c_africa			= {m_x = t_as_af_mx,	m_z = t_as_af_mz,	m_d = t_as_af_md,	n_d = t_as_af_nd,	n_x = t_as_af_nx,		n_z = t_as_af_nz},
}
mg_earth.tectonic_plates["c_africa"].neighbors = {
	c_europe			= {m_x = t_e_af_mx,		m_z = t_e_af_mz,	m_d = t_e_af_md,	n_d = t_e_af_nd,	n_x = t_e_af_nx,		n_z = t_e_af_nz},
	c_northamerica		= {m_x = t_na_af_mx,	m_z = t_na_af_mz,	m_d = t_na_af_md,	n_d = t_na_af_nd,	n_x = t_na_af_nx,		n_z = t_na_af_nz},
	c_southamerica		= {m_x = t_sa_af_mx,	m_z = t_sa_af_mz,	m_d = t_sa_af_md,	n_d = t_sa_af_nd,	n_x = t_sa_af_nx,		n_z = t_sa_af_nz},
	c_asia				= {m_x = t_as_af_mx,	m_z = t_as_af_mz,	m_d = t_as_af_md,	n_d = t_as_af_nd,	n_x = t_as_af_nx,		n_z = t_as_af_nz},
	c_australia			= {m_x = t_af_au_mx,	m_z = t_af_au_mz,	m_d = t_af_au_md,	n_d = t_af_au_nd,	n_x = t_af_au_nx,		n_z = t_af_au_nz},
}
mg_earth.tectonic_plates["c_australia"].neighbors = {
	c_asia				= {m_x = t_as_au_mx,	m_z = t_as_au_mz,	m_d = t_as_au_md,	n_d = t_as_au_nd,	n_x = t_as_au_nx,		n_z = t_as_au_nz},
	c_africa			= {m_x = t_af_au_mx,	m_z = t_af_au_mz,	m_d = t_af_au_md,	n_d = t_af_au_nd,	n_x = t_af_au_nx,		n_z = t_af_au_nz},
}


return points

